// <auto-generated />
using System;
using Authentication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP.NET_Core_Authentication.Migrations
{
    [DbContext(typeof(MembersContext))]
    [Migration("20231125005036_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.Models.Child", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Child");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Birthday = new DateTime(2018, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Adam",
                            LastName = "Anderson"
                        },
                        new
                        {
                            ID = 2,
                            Birthday = new DateTime(2017, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Taylor",
                            LastName = "Anderson"
                        },
                        new
                        {
                            ID = 3,
                            Birthday = new DateTime(2018, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Leighton",
                            LastName = "Topaz"
                        },
                        new
                        {
                            ID = 4,
                            Birthday = new DateTime(2018, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sasha",
                            LastName = "Mathers"
                        },
                        new
                        {
                            ID = 5,
                            Birthday = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Braydon",
                            LastName = "Blossom"
                        },
                        new
                        {
                            ID = 6,
                            Birthday = new DateTime(2018, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Levon",
                            LastName = "Anderson"
                        },
                        new
                        {
                            ID = 7,
                            Birthday = new DateTime(2018, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sage",
                            LastName = "Goldstein"
                        },
                        new
                        {
                            ID = 8,
                            Birthday = new DateTime(2018, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rosemary",
                            LastName = "Goldstein"
                        },
                        new
                        {
                            ID = 9,
                            Birthday = new DateTime(2018, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Thyme",
                            LastName = "Goldstein"
                        },
                        new
                        {
                            ID = 10,
                            Birthday = new DateTime(2018, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marcus",
                            LastName = "Blossom"
                        });
                });

            modelBuilder.Entity("Authentication.Models.Members", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Parent");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "100 Oak Ave",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Becky",
                            LastName = "Bozwell",
                            MobilePhone = "(231)123-4567",
                            State = "MI",
                            Zip = "49696"
                        },
                        new
                        {
                            ID = 2,
                            Address = "2010 Greenway Ave, Apt 202",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Albert",
                            LastName = "Anderson",
                            MobilePhone = "(231)123-4444",
                            State = "MI",
                            Zip = "49696"
                        },
                        new
                        {
                            ID = 3,
                            Address = "1600 Park Place",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Taylor",
                            LastName = "Topaz",
                            MobilePhone = "(231)123-9874",
                            State = "MI",
                            Zip = "49696"
                        },
                        new
                        {
                            ID = 4,
                            Address = "2 Flowing Park Drive",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Magnolia",
                            LastName = "Blossom",
                            MobilePhone = "(231)123-1111",
                            State = "MI",
                            Zip = "49696"
                        },
                        new
                        {
                            ID = 5,
                            Address = "1950 Beaver Drive",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Jerry",
                            LastName = "Mathers",
                            MobilePhone = "(231)123-4433",
                            State = "MI",
                            Zip = "49696"
                        },
                        new
                        {
                            ID = 6,
                            Address = "6 Hwy 5",
                            City = "Traverse City",
                            Email = "",
                            FirstName = "Pepper",
                            LastName = "Goldstein",
                            MobilePhone = "(231)123-6898",
                            State = "MI",
                            Zip = "49696"
                        });
                });

            modelBuilder.Entity("Authentication.Models.ParentChild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ChildID")
                        .HasColumnType("int");

                    b.Property<int>("MembersID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChildID");

                    b.HasIndex("MembersID");

                    b.ToTable("Family");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ChildID = 1,
                            MembersID = 1
                        },
                        new
                        {
                            ID = 2,
                            ChildID = 1,
                            MembersID = 2
                        },
                        new
                        {
                            ID = 3,
                            ChildID = 2,
                            MembersID = 2
                        },
                        new
                        {
                            ID = 4,
                            ChildID = 6,
                            MembersID = 2
                        },
                        new
                        {
                            ID = 5,
                            ChildID = 3,
                            MembersID = 3
                        },
                        new
                        {
                            ID = 6,
                            ChildID = 4,
                            MembersID = 5
                        },
                        new
                        {
                            ID = 7,
                            ChildID = 5,
                            MembersID = 4
                        },
                        new
                        {
                            ID = 8,
                            ChildID = 10,
                            MembersID = 4
                        },
                        new
                        {
                            ID = 9,
                            ChildID = 7,
                            MembersID = 6
                        },
                        new
                        {
                            ID = 10,
                            ChildID = 8,
                            MembersID = 6
                        },
                        new
                        {
                            ID = 11,
                            ChildID = 9,
                            MembersID = 6
                        });
                });

            modelBuilder.Entity("Authentication.Models.ParentChild", b =>
                {
                    b.HasOne("Authentication.Models.Child", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Models.Members", "Members")
                        .WithMany("Children")
                        .HasForeignKey("MembersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Authentication.Models.Child", b =>
                {
                    b.Navigation("Parents");
                });

            modelBuilder.Entity("Authentication.Models.Members", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
